Паттерн «Строитель»
● Создайте класс Pizza, который содержит следующие
атрибуты: size, cheese, pepperoni, mushrooms, onions,
bacon.
● Создайте класс PizzaBuilder, который использует паттерн
«Строитель» для создания экземпляра Pizza. Этот класс
должен содержать методы для добавления каждого из
атрибутов Pizza.
● Создайте класс PizzaDirector, который принимает
экземпляр PizzaBuilder и содержит метод make_pizza,
который использует PizzaBuilder для создания Pizza.


class PizzaBuilder:
    def __init__(self):
        self.size = ''
        self.cheese = "The ingredient is missing"
        self.pepperoni = "The ingredient is missing"
        self.mushrooms = "The ingredient is missing"
        self.onions = "The ingredient is missing"
        self.bacon = "The ingredient is missing"
    def set_size(self, size):
        self.size = size
        return self
    def add_cheese(self):
        self.cheese = "The ingredient is present"
        return self
    def add_pepperoni(self):
        self.pepperoni = "The ingredient is present"
        return self

    def add_mushrooms(self):
        self.mushrooms = "The ingredient is present"
        return self
    def add_onions(self):
        self.onions = "The ingredient is present"
        return self
    def add_bacon(self):
        self.bacon = "The ingredient is present"
        return self
    def build(self):
        return Pizza(self.size, self.cheese, self.pepperoni, self.mushrooms, self.onions, self.bacon)

class PizzaDirector:
    def __init__(self, builder):
        self.builder = builder

    def make_pizza(self):
        return self.builder.build()


pizza_builder = PizzaBuilder()
pizza_builder.set_size("Small").add_pepperoni().add_mushrooms().add_bacon()
pizza_director = PizzaDirector(pizza_builder)
pizza = pizza_director.make_pizza()
print(pizza)
